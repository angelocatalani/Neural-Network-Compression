name: Style check

on:
  push:
    branches: [ staging, master ]
  pull_request:
    branches: [ staging, master ]

jobs:
  style-checks:
    runs-on:  Ubuntu-20.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install Poetry
        uses: dschep/install-poetry-action@v1.3

      - name: Configure Poetry
        run: |
          echo "~/.poetry/venv" >> $GITHUB_PATH
          poetry config virtualenvs.create true
          poetry config virtualenvs.in-project false
          poetry config cache-dir ~/.poetry

      - name: Store Poetry cache
        uses: actions/cache@v2
        id: poetry-cache
        with:
          path: ~/.poetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Install dependecies
        if: steps.poetry-cache.outputs.cache-hit != 'true'
        run: poetry install -vv

      - name: Run Black
        run:  poetry run black --check .

      - name: Run MyPy
        run: |
          poetry run mypy --strict ./neural_network_compression
      
      - name: Run isort
        run: poetry run isort -c